<?php
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/AW-LICENSE.txt
 *
 * =================================================================
 *                 MAGENTO EDITION USAGE NOTICE
 * =================================================================
 * This software is designed to work with Magento community edition and
 * its use on an edition other than specified is prohibited. aheadWorks does not
 * provide extension support in case of incorrect edition use.
 * =================================================================
 *
 * @category   AW
 * @package    AW_Sarp2
 * @version    2.0.3
 * @copyright  Copyright (c) 2010-2012 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/AW-LICENSE.txt
 */
?><script type="text/javascript">
    (function () {
        var awSarp2SubscriptionTypePrices = <?php echo $this->getSubscriptionTypePrices();?>;
        var priceBoxes = [];
        var findPriceBox = function (startEl) {
            while (startEl && startEl.tagName.toLowerCase() != 'body') {
                if (startEl.hasClassName('price-box')) {
                    priceBoxes.push(startEl);
                    break;
                }
                startEl = startEl.parentNode;
            }
        };
        $H(optionsPrice.containers).each(function (pair) {
            findPriceBox($(pair.value));
            findPriceBox($(pair.value + optionsPrice.duplicateIdSuffix));
        });
        //remove duplicate elements
        priceBoxes.each(function (el, index) {
            priceBoxes.each(function (oEl, oIndex) {
                if (oEl === el && index != oIndex) {
                    delete priceBoxes[oIndex];
                }
            });
        });
        priceBoxes.each(function (box) {
            var priceEl = box.select('.regular-price')[0];
            if (!priceEl) {
                priceEl = box.select('.full-product-price')[0];
            }
            if (!priceEl) {
                if (box.select('.price')[0]) {
                    var price = new Element('p');
                    price.addClassName('regular-price');
                    var priceValue = box.select('.price')[0].cloneNode(true);
                    if (priceValue.getAttribute('id') && priceValue.getAttribute('id').match(optionsPrice.duplicateIdSuffix) === null) {
                        priceValue.setAttribute('id', 'disabled.by.awsarp2_product-price-' + optionsPrice.productId);
                    } else {
                        priceValue.setAttribute('id', 'disabled.by.awsarp2_product-price-' + optionsPrice.productId + optionsPrice.duplicateIdSuffix);
                    }
                    priceValue.innerHTML = priceValue.innerHTML.replace(/[0-9\.]+/, optionsPrice.productPrice);
                    price.appendChild(priceValue);
                    price.hide();
                    box.appendChild(price.cloneNode(true));
                }
            }
        });
        <?php if (Mage::helper('aw_sarp2')->checkMageVersion('1.5', '<')): ?>
        /** ++ hack for default checked option in 1.4.x*/
        var firstPeriodElement = Form.getInputs('product_addtocart_form', 'radio', 'options[<?php echo AW_Sarp2_Helper_Subscription::SUBSCRIPTION_TYPE_SELECTOR_PRODUCT_OPTION_ID ?>]').first();
        firstPeriodElement.click();
        /** -- hack for default checked option in 1.4.x*/
        <?php endif;?>
        var originalOpConfigReloadPriceFn = opConfig.reloadPrice.bind(opConfig);
        opConfig.reloadPrice = function () {
            $$('body .product-custom-option').each(function (element) {
                var optionId = 0;
                element.name.sub(/[0-9-]+/, function (match) {
                    optionId = parseInt(match[0], 10);
                });
                if (optionId === <?php echo $this->getSubscriptionTypeOptionId();?>) {
                    if (element.checked) {
                        if (element.getValue() == <?php echo $this->getNoSubscriptionValue();?>) {
                            priceBoxes.each(function (box) {
                                var priceEls = box.select('p .price');
                                if (priceEls.length > 1) {
                                    priceEls.each(function (el) {
                                        if (el.up().hasClassName('regular-price') || el.up().hasClassName('full-product-price')) {
                                            el.up().hide();
                                            var currentId = el.getAttribute('id').replace('disabled.by.awsarp2_', '');
                                            el.setAttribute('id', 'disabled.by.awsarp2_' + currentId);
                                        } else {
                                            el.up().show();
                                            el.setAttribute('id', el.getAttribute('id').replace('disabled.by.awsarp2_', ''));
                                        }
                                    });
                                }
                            });
                            optionsPrice.changePrice('price', 0);
                            optionsPrice.changePrice('oldPrice', 0);
                        } else {
                            priceBoxes.each(function (box) {
                                var priceEls = box.select('p .price');
                                if (priceEls.length > 1) {
                                    priceEls.each(function (el) {
                                        if (el.up().hasClassName('regular-price') || el.up().hasClassName('full-product-price')) {
                                            el.up().show();
                                            el.setAttribute('id', el.getAttribute('id').replace('disabled.by.awsarp2_', ''));
                                        } else {
                                            el.up().hide();
                                            var currentId = el.getAttribute('id').replace('disabled.by.awsarp2_', '');
                                            el.setAttribute('id', 'disabled.by.awsarp2_' + currentId);
                                        }
                                    });
                                }
                            });
                            var price = parseFloat(awSarp2SubscriptionTypePrices[element.getValue()].price);
                            price = price - optionsPrice.productPrice;
                            optionsPrice.changePrice('price', price);
                            optionsPrice.customPrices = {};
                        }
                        optionsPrice.reload();
                        if (window.spConfig) {
                            spConfig.reloadPrice();
                        }
                    }
                }
            });
            originalOpConfigReloadPriceFn();
        };
        //compatibility with bundle
        if ("bundle" in window && typeof(bundle) === "object" &&
            "reloadPrice" in bundle && typeof(bundle.reloadPrice) === "function") {
            var originalBundleReloadPriceFn = bundle.reloadPrice.bind(bundle);
            bundle.reloadPrice = function () {
                originalBundleReloadPriceFn();
                opConfig.reloadPrice();
            }
        }
    })();
</script>